{"version":3,"sources":["components/Authentication.jsx","components/Chatbot.jsx","components/StockField.jsx","components/Portfolio.jsx","components/Home.jsx","App.js","serviceWorker.js","index.js","components/images/fizzlogo.png","components/images/G.png","components/images/fizzstart.png","components/images/stonksuser.png"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","SignIn","onClick","provider","GoogleAuthProvider","signInWithPopup","className","src","gImg","SignOut","currentUser","signOut","Authentication","props","useAuthState","user","useState","isLogged","setIsLogged","dataSent","setDataSent","useEffect","a","data","JSON","stringify","uid","email","config","method","url","headers","axios","then","response","catch","error","console","log","sendUserData","setUser","fizz","Chatbot","messageBoard","setMessageBoard","useForm","register","handleSubmit","reset","messagesEndRef","useRef","current","scrollIntoView","behavior","map","item","key","indexOf","fizzlogo","userpic","alt","ref","onSubmit","message","length","newMessages","push","sendMessage","name","type","value","schema","yup","shape","ticker","required","quantity","positive","integer","slp","StockField","resolver","yupResolver","errors","control","Date","selected","setSelected","newPortfolio","portfolio","date","toString","setPortfolio","id","placeholder","as","ReactDatePicker","valueName","onChange","placeholderText","dateFormat","maxDate","defaultValue","Portfolio","submitPortFolioHelper","Home","isUpload","setIsUpload","isStonks","setStonks","navClass","setNavClass","navWrapperClass","setNavWrapperClass","handlePortfolio","handleFizz","open","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.3fd4e8ee.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport gImg from './images/G.png';\r\nimport fizz from './images/fizzstart.png';\r\n\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\n\r\nfirebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId:  process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId:  process.env.REACT_APP_FIREBASE_APP_ID,\r\n})\r\n\r\nconst auth = firebase.auth();\r\n\r\nfunction SignIn() {\r\n    const signInWithGoogle = () => {\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n        auth.signInWithPopup(provider);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={signInWithGoogle}>Sign in with <img className=\"google-icon\" src={gImg}></img></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction SignOut() {\r\n    return auth.currentUser && (\r\n        <button className=\"nav-button\" onClick={() => auth.signOut()}>Sign Out </button>\r\n    )\r\n}\r\n\r\n\r\nfunction Authentication(props) {\r\n    const [user] = useAuthState(auth);\r\n\r\n    const [isLogged, setIsLogged] = useState(false);\r\n    const [dataSent, setDataSent] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        async function sendUserData(){\r\n            var data = JSON.stringify({\r\n                \"userId\": user.uid,\r\n                \"userEmail\" : user.email,\r\n            });\r\n            var config = {\r\n                method: 'post',\r\n                url: 'https://maelstrom.pythonanywhere.com/login',\r\n                headers: { \r\n                    'Content-Type': 'application/json'\r\n            },\r\n                data : data\r\n            };\r\n            axios(config)\r\n            .then(function (response) {\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n        }\r\n\r\n        if (user) {\r\n            !isLogged && setIsLogged(true)\r\n            if(isLogged && !dataSent) { \r\n                sendUserData();\r\n                setDataSent(true);\r\n                props.setUser(user);\r\n            };\r\n            props.setIsLogged(true);\r\n        } else {\r\n            isLogged && setIsLogged(false)\r\n            setDataSent(false);\r\n            props.setIsLogged(false);\r\n            props.setUser(user);\r\n        }\r\n\r\n    }, [user, isLogged, setIsLogged, dataSent, setDataSent, props])\r\n\r\n    return(\r\n        !user ? <div className=\"login-screen login-bg-image\">\r\n            <div className=\"login-box\">\r\n                <div className=\"special\">\r\n                    <img src={fizz} className=\"main-logo\"/>\r\n                    <div className=\"simply\">\r\n                        <SignIn/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div> : <SignOut/>\r\n    )\r\n}\r\nexport default Authentication;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport fizzlogo from './images/fizzlogo.png';\r\nimport userpic from './images/stonksuser.png';\r\n\r\nfunction Chatbot(props) {\r\n    const [messageBoard, setMessageBoard] = useState([...props.messageBoard])\r\n    \r\n    const sendMessage = (message) => {\r\n        if (message.length > 0) {\r\n            var data = JSON.stringify({\r\n                \"userId\": props.user.uid,\r\n                \"userEmail\" : props.user.email,\r\n                \"query\": message,\r\n            });\r\n            var config = {\r\n                method: 'post',\r\n                url: 'https://maelstrom.pythonanywhere.com/chatbot/query',\r\n                headers: { \r\n                    'Content-Type': 'application/json'\r\n            },\r\n                data : data\r\n            };\r\n            axios(config)\r\n            .then(function (response) {\r\n                let newMessages = [...messageBoard];\r\n                newMessages.push(['user', message])\r\n                if (JSON.stringify(response.data.response) !== \"\") {\r\n                    newMessages.push(['bot', JSON.stringify(response.data.response)]);\r\n                } else {\r\n                    newMessages.push(['bot', \"I'm not sure what you mean?\"]);\r\n                }\r\n                setMessageBoard(newMessages)\r\n                props.setMessageBoard(newMessages)\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n        }\r\n    }\r\n\r\n    const { register, handleSubmit, reset } = useForm();\r\n    const onSubmit = (data) => {\r\n        sendMessage(data.message);\r\n        reset();\r\n    }\r\n\r\n    const messagesEndRef = useRef(null)\r\n\r\n    const scrollToBottom = () => {\r\n        messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" })\r\n    }\r\n\r\n    useEffect(scrollToBottom, [messageBoard]);\r\n    \r\n    return(\r\n        <div className=\"bot\">\r\n            <div className=\"message-container\">\r\n                <div className=\"message-board\">\r\n                    {messageBoard !== [] && messageBoard.map((item) => <div className={\"container \" + item[0] + \"-message\"} key={messageBoard.indexOf(item)}>\r\n                        <img src={item[0] === 'bot' ? fizzlogo : userpic} alt=\"Avatar\"/>\r\n                        <font className={item[0] + \"-text\"}>{item[1]}</font>\r\n                    </div>)}\r\n                    <div ref={messagesEndRef} />\r\n                </div>\r\n                <form className=\"chat-form\" onSubmit={handleSubmit(onSubmit)}>\r\n                        <div className=\"chat-container\">\r\n                            <input className=\"chat-text\" name=\"message\" ref={register} />\r\n                        </div>\r\n                        <input className=\"chat-send\" type=\"submit\" value=\"🚀\"/>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chatbot;","import React, { useState } from 'react';\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\n\r\nimport ReactDatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst schema = yup.object().shape({\r\n    ticker: yup.string().required(),\r\n    quantity: yup.number().positive().integer().required(),\r\n    slp: yup.number(),\r\n});\r\n\r\nfunction StockField(props) {\r\n    const { register, handleSubmit, errors, reset, control } = useForm({\r\n        resolver: yupResolver(schema)\r\n    });\r\n\r\n    const [selected, setSelected] = useState(new Date());\r\n\r\n    const onSubmit = (data) => {\r\n        reset();\r\n        let newPortfolio = [...props.portfolio]\r\n        data.date = data.date.toString()\r\n        newPortfolio.push(data)\r\n        console.log(newPortfolio);\r\n        props.setPortfolio(newPortfolio)\r\n    }\r\n\r\n    return(\r\n        <form className=\"new-stock\" onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"form-item\">\r\n                <label className=\"label\">Stock Ticker</label>\r\n                <input id=\"ticker\" name=\"ticker\" type=\"text\" ref={register} placeholder=\"Eg. AAPL\"/>\r\n            </div>\r\n\r\n            <div className=\"form-item\">\r\n                <label className=\"label\">Stock Quantity</label>\r\n                <input name=\"quantity\" type=\"text\" ref={register} placeholder=\"Number of shares you own\"/>\r\n            </div>\r\n\r\n            <div className=\"form-item\">\r\n                <label className=\"label\">Date Purchased</label>\r\n                <Controller\r\n                    control={control}\r\n                    as={ReactDatePicker}\r\n                    valueName={selected} // DateSelect value's name is selected\r\n                    onChange={([selected]) => setSelected(selected)}\r\n                    name=\"date\"\r\n                    placeholderText={selected}\r\n                    dateFormat=\"yyyy/MM/dd\"\r\n                    maxDate={new Date()}\r\n                    dateFormat=\"d MMM yyyy\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-item\">\r\n                <label className=\"label\">Stop-loss Point/Downside Put</label>\r\n                <input name=\"slp\" type=\"text\" ref={register} placeholder=\"Eg. 5\" defaultValue={0}/>\r\n            </div>\r\n\r\n            <div className=\"form-item\">\r\n                <label className=\"hide label\"></label>\r\n                <button className=\"form-button\" type=\"submit\" >Add Stock</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default StockField;","import React from 'react';\r\nimport { useState } from 'react';\r\nimport StockField from './StockField.jsx';\r\nimport axios from 'axios';\r\n\r\nfunction Portfolio(props) {\r\n    const [portfolio, setPortfolio] = useState(props.portfolio);\r\n\r\n    const submitPortFolioHelper = () => {\r\n        var data = JSON.stringify({\r\n            \"userId\": props.user.uid,\r\n            \"userEmail\" : props.user.email,\r\n            \"portfolio\" : portfolio,\r\n        });\r\n        var config = {\r\n            method: 'post',\r\n            url: 'https://maelstrom.pythonanywhere.com/portfolio/upload',\r\n            headers: { \r\n                'Content-Type': 'application/json'\r\n        },\r\n            data : data\r\n        };\r\n        axios(config)\r\n        .then(function (response) {\r\n            JSON.stringify(response.data.response);\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    const submitPortFolio = () => {\r\n        props.setPortfolio(portfolio);\r\n        if(props.user) {\r\n            console.log(\"Great Success\")\r\n            submitPortFolioHelper(portfolio);\r\n        } else {\r\n            console.log(\"oops\")\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"portfolio-containter\">\r\n            <h1>Your Portfolio</h1>\r\n            <div className=\"main-folio\">\r\n                {(portfolio.length >= 1) ? portfolio.map((item) => <div>\r\n                    {\"Stock:\" + item.ticker + \"| Quantity: \" + item.quantity + \"| Purchase date\" + item.date.toString() + \"| Stop-loss/Downside put: \" + item.slp}\r\n                </div>) : <h2>Your portfolio is empty 😭</h2>}\r\n            </div>\r\n\r\n            <div className=\"add-new\">\r\n                <h2>Add additional stocks</h2>\r\n                <StockField portfolio={portfolio} setPortfolio={setPortfolio}/>\r\n                <button onClick={submitPortFolio}>Submit Portfolio</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Portfolio;","import React, { useState } from 'react';\r\nimport Authentication from './Authentication.jsx';\r\nimport Chatbot from './Chatbot.jsx';\r\nimport Portfolio from './Portfolio.jsx';\r\nimport fizz from './images/fizzlogo.png';\r\n\r\nfunction Home() {\r\n    const [isLogged, setIsLogged] = useState(false);\r\n    const [isUpload, setIsUpload] = useState(false);\r\n    const [isStonks, setStonks] = useState(true);\r\n\r\n    const [user, setUser] = useState(null);\r\n    const [portfolio, setPortfolio] = useState([]);\r\n    const [messageBoard, setMessageBoard] = useState([\r\n        ['bot', 'Hey there! I’m Fizz, your personal financial consultant!'], \r\n        ['bot', 'I can help you with some of the following: analyzing your current portfolio, providing you with suggestions about the stocks you may want to transact, and even recommending potential assets to invest in!'],\r\n        ['bot', 'For example, get started by asking me \"What is AMZN??!\"'],\r\n    ]);\r\n\r\n    const [navClass, setNavClass] = useState(\"burger-container\")\r\n    const [navWrapperClass, setNavWrapperClass] = useState(\"nav-wrapper\")\r\n\r\n    const handlePortfolio = () => {\r\n        setIsUpload(true);\r\n        setStonks(false);\r\n    }\r\n\r\n    const handleFizz = () => {\r\n        setIsUpload(false);\r\n        setStonks(true);\r\n    }\r\n    \r\n    const open = () => {\r\n        navClass === \"burger-container\" ? setNavClass(\"change\") : setNavClass(\"burger-container\")\r\n        navWrapperClass === \"nav-wrapper\" ? setNavWrapperClass(\"open-wrapper-class\") : setNavWrapperClass(\"nav-wrapper\")\r\n    }\r\n\r\n    const handleOpenFizz = () => {\r\n        handleFizz();\r\n        open();\r\n    }\r\n\r\n    const handleOpenPortfolio = () => {\r\n        handlePortfolio();\r\n        open();\r\n    }\r\n\r\n    return(\r\n        <div className=\"home\">\r\n            {!isLogged ?\r\n                <Authentication setIsLogged={setIsLogged} setUser={setUser}/> :\r\n                <div>\r\n                    <div className=\"navbar\">\r\n                        <img src={fizz} className=\"logo-image\" alt=\"fizzLogo\"></img>\r\n                        <div className=\"nav-wrapper\">\r\n                            <div className=\"nav-link\" onClick={handleFizz}>Fizz</div>\r\n                            <div className=\"nav-link\" onClick={handlePortfolio}>Portfolio</div>\r\n                            <div className=\"nav-link\" onClick={() => console.log(3)}>Docs</div>\r\n                            <div className=\"nav-link\" onClick={() => console.log(4)}>About Us</div>\r\n                        </div>\r\n                        <div className=\"sign-out-nav\"><Authentication setIsLogged={setIsLogged} setUser={setUser}/></div>\r\n                        <div className={navClass} onClick={open}>\r\n                            <div className=\"bar1\"></div>\r\n                            <div className=\"bar2\"></div>\r\n                            <div className=\"bar3\"></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={navWrapperClass}>\r\n                            <div className=\"open-nav-link\" onClick={handleOpenFizz}>Fizz</div>\r\n                            <div className=\"open-nav-link\" onClick={handleOpenPortfolio}>Portfolio</div>\r\n                            <div className=\"open-nav-link\" onClick={() => console.log(3)}>Docs</div>\r\n                            <div className=\"open-nav-link\" onClick={() => console.log(4)}>About Us</div>\r\n                    </div>\r\n                    {isUpload && <Portfolio user={user} portfolio={portfolio} setPortfolio={setPortfolio}/>}\r\n                    {isStonks && <Chatbot user={user} messageBoard={messageBoard} setMessageBoard={setMessageBoard}/>}\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport Home from './components/Home.jsx';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/fizzlogo.4b93b019.png\";","module.exports = __webpack_public_path__ + \"static/media/G.0b1e5c66.png\";","module.exports = __webpack_public_path__ + \"static/media/fizzstart.6e8265f1.png\";","module.exports = __webpack_public_path__ + \"static/media/stonksuser.f21ada93.png\";"],"sourceRoot":""}