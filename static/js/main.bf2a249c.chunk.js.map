{"version":3,"sources":["components/images/G.png","components/images/fizzstart.png","components/images/stonksuser.png","components/Authentication.jsx","components/Chatbot.jsx","components/StockField.jsx","components/PortfolioStock.jsx","components/Portfolio.jsx","components/Home.jsx","App.js","serviceWorker.js","index.js","components/images/fizzlogo.png"],"names":["module","exports","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","SignIn","onClick","provider","GoogleAuthProvider","signInWithPopup","className","src","gImg","alt","SignOut","currentUser","signOut","Authentication","props","useAuthState","user","useState","isLogged","setIsLogged","dataSent","setDataSent","useEffect","a","data","JSON","stringify","uid","email","config","method","url","headers","axios","then","response","catch","error","console","log","sendUserData","setUser","fizz","Chatbot","messageBoard","setMessageBoard","userpic","userImage","setUserImage","useForm","register","handleSubmit","reset","messagesEndRef","useRef","current","scrollIntoView","behavior","photoURL","map","item","key","indexOf","fizzlogo","ref","onSubmit","message","length","newMessages","push","arr","substring","replace","split","forEach","sendMessage","name","type","value","defaultValues","Native","StockField","control","errors","selectedDate","setselectedDate","newPortfolio","portfolio","purchaseDate","getDate","getMonth","getFullYear","setPortfolio","submitPortfolio","required","placeholder","ticker","quantity","as","DatePicker","valueName","selected","onChange","dateFormat","placeholderText","rules","defaultValue","maxDate","Date","descendingComparator","b","orderBy","headCells","id","numeric","disablePadding","label","EnhancedTableHead","classes","onSelectAllClick","order","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","inputProps","headCell","align","sortDirection","TableSortLabel","active","direction","property","event","visuallyHidden","EnhancedTableToolbar","Tooltip","title","deleteStock","setSelected","IconButton","aria-label","useStyles","makeStyles","theme","root","width","display","flexDirection","justifyContent","alignItems","paper","marginBottom","spacing","table","minWidth","border","clip","height","margin","overflow","position","top","EnhancedTable","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","emptyRows","Math","min","rows","Paper","TableContainer","Table","aria-labelledby","size","target","newSelecteds","n","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","row","isItemSelected","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","component","scope","slp","style","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","Portfolio","setRows","submitPortFolioHelper","createData","newRows","Home","isUpload","setIsUpload","isStonks","setStonks","navClass","setNavClass","navWrapperClass","setNavWrapperClass","handlePortfolio","handleFizz","open","href","rel","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bf2a249c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/G.0b1e5c66.png\";","module.exports = __webpack_public_path__ + \"static/media/fizzstart.6e8265f1.png\";","module.exports = __webpack_public_path__ + \"static/media/stonksuser.f21ada93.png\";","import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport gImg from './images/G.png';\r\nimport fizz from './images/fizzstart.png';\r\n\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\n\r\nfirebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId:  process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId:  process.env.REACT_APP_FIREBASE_APP_ID,\r\n})\r\n\r\nconst auth = firebase.auth();\r\n\r\nfunction SignIn() {\r\n    const signInWithGoogle = () => {\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n        auth.signInWithPopup(provider);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={signInWithGoogle}>Sign in with <img className=\"google-icon\" src={gImg} alt=\"google-icon\"></img></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction SignOut() {\r\n    return auth.currentUser && (\r\n        <button className=\"sign-out-button\" onClick={() => auth.signOut()}>Sign Out </button>\r\n    )\r\n}\r\n\r\n\r\nfunction Authentication(props) {\r\n    const [user] = useAuthState(auth);\r\n\r\n    const [isLogged, setIsLogged] = useState(false);\r\n    const [dataSent, setDataSent] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        async function sendUserData(){\r\n            var data = JSON.stringify({\r\n                \"userId\": user.uid,\r\n                \"userEmail\" : user.email,\r\n            });\r\n            var config = {\r\n                method: 'post',\r\n                url: 'https://maelstrom.pythonanywhere.com/login',\r\n                headers: { \r\n                    'Content-Type': 'application/json'\r\n            },\r\n                data : data\r\n            };\r\n            axios(config)\r\n            .then(function (response) {\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n        }\r\n\r\n        if (user) {\r\n            !isLogged && setIsLogged(true)\r\n            if(isLogged && !dataSent) { \r\n                sendUserData();\r\n                setDataSent(true);\r\n                props.setUser(user);\r\n            };\r\n            props.setIsLogged(true);\r\n        } else {\r\n            isLogged && setIsLogged(false)\r\n            setDataSent(false);\r\n            props.setIsLogged(false);\r\n            props.setUser(user);\r\n        }\r\n\r\n    }, [user, isLogged, setIsLogged, dataSent, setDataSent, props])\r\n\r\n    return(\r\n        !user ? <div className=\"login-screen login-bg-image\">\r\n            <div className=\"login-box\">\r\n                <img src={fizz} className=\"main-logo\" alt=\"app-logo\"/>\r\n                <div className=\"sign-in\"><SignIn/></div>\r\n            </div>\r\n        </div> : <SignOut/>\r\n    )\r\n}\r\nexport default Authentication;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport fizzlogo from './images/fizzlogo.png';\r\nimport userpic from './images/stonksuser.png';\r\n\r\nfunction Chatbot(props) {\r\n    const [messageBoard, setMessageBoard] = useState([...props.messageBoard])\r\n    const [userImage, setUserImage] = useState(userpic)\r\n    \r\n    const sendMessage = (message) => {\r\n        if (message.length > 0) {\r\n            var data = JSON.stringify({\r\n                \"userId\": props.user.uid,\r\n                \"userEmail\" : props.user.email,\r\n                \"query\": message,\r\n            });\r\n            var config = {\r\n                method: 'post',\r\n                url: 'https://maelstrom.pythonanywhere.com/chatbot/query',\r\n                headers: { \r\n                    'Content-Type': 'application/json'\r\n            },\r\n                data : data\r\n            };\r\n            axios(config)\r\n            .then(function (response) {\r\n                let newMessages = [...messageBoard];\r\n                newMessages.push(['user', message])\r\n                if (JSON.stringify(response.data.response) !== null || JSON.stringify(response.data.response).length > 1) {\r\n                    if (JSON.stringify(response.data.response).length > 60) {\r\n                        //eslint-disable-next-line\r\n                        let arr = JSON.stringify(response.data.response).substring(1, JSON.stringify(response.data.response).length - 1).replace(/(\\.+|\\:|\\!|\\?)(\\\"*|\\'*|\\)*|}*|]*)(\\s|\\n|\\r|\\r\\n)/gm, \"$1$2|\").split(\"|\");\r\n                        arr ? arr.forEach((item) => {\r\n                            newMessages.push(['bot', item])\r\n                        }) : newMessages.push(['bot', \"I'm not sure what you mean?\"]);\r\n                    } else {\r\n                        newMessages.push(['bot', JSON.stringify(response.data.response).substring(1, JSON.stringify(response.data.response).length - 1)])\r\n                    }\r\n                } else {\r\n                    newMessages.push(['bot', \"I'm not sure what you mean?\"]);\r\n                }\r\n                setMessageBoard(newMessages)\r\n                props.setMessageBoard(newMessages)\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n        }\r\n    }\r\n\r\n    const { register, handleSubmit, reset } = useForm();\r\n    const onSubmit = (data) => {\r\n        sendMessage(data.message);\r\n        reset();\r\n    }\r\n\r\n    const messagesEndRef = useRef(null)\r\n\r\n    const scrollToBottom = () => {\r\n        messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" })\r\n    }\r\n\r\n    useEffect(() => {\r\n        scrollToBottom()\r\n        if(props.user && userImage !== props.user.photoURL) setUserImage(props.user.photoURL)\r\n    }, [messageBoard, userImage, setUserImage, props.user]);\r\n    \r\n    return(\r\n        <div className=\"bot\">\r\n            <div className=\"message-container\">\r\n                <div className=\"message-board\">\r\n                    {messageBoard !== [] && messageBoard.map((item) => <div className={\"container \" + item[0] + \"-message\"} key={messageBoard.indexOf(item)}>\r\n                        <img src={item[0] === 'bot' ? fizzlogo : userImage} alt=\"Avatar\"/>\r\n                        <font className={item[0] + \"-text\"}>{item[1]}</font>\r\n                    </div>)}\r\n                    <div ref={messagesEndRef} />\r\n                </div>\r\n                <form className=\"chat-form\" onSubmit={handleSubmit(onSubmit)}>\r\n                        <div className=\"chat-container\">\r\n                            <input className=\"chat-text\" name=\"message\" ref={register} />\r\n                        </div>\r\n                        <input className=\"chat-send\" type=\"submit\" value=\"🚀\"/>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chatbot;","import React, { useState } from 'react';\r\nimport { useForm, Controller } from \"react-hook-form\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst defaultValues = {\r\n    Native: \"\"\r\n};\r\n\r\nfunction StockField(props) {\r\n    const { register, handleSubmit, reset, control, errors } = useForm({defaultValues});\r\n    const [selectedDate, setselectedDate] = useState(null);\r\n\r\n    const onSubmit = (data) => {\r\n        reset();\r\n        let newPortfolio = [...props.portfolio];\r\n        data.purchaseDate = data.purchaseDate.getDate()+\"/\"+data.purchaseDate.getMonth()+\"/\"+data.purchaseDate.getFullYear();\r\n        newPortfolio.push(data);\r\n        props.setPortfolio(newPortfolio);\r\n        props.submitPortfolio(newPortfolio);\r\n    }\r\n\r\n    return(\r\n        <form className=\"new-stock\" onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"form-item\">\r\n                <label className=\"label\">Stock Ticker</label>\r\n                <input name=\"ticker\" type=\"text\" ref={register({ required: true })} placeholder=\"Eg. AAPL\"/>\r\n                {errors.ticker && <span className=\"err\">This field is required</span>}\r\n            </div>\r\n\r\n            <div className=\"form-item\">\r\n                <label className=\"label\">Stock Quantity</label>\r\n                <input name=\"quantity\" type=\"text\" ref={register({ required: true })} placeholder=\"Number of shares you own\"/>\r\n                {errors.quantity && <span className=\"err\">This field is required</span>}\r\n            </div>\r\n\r\n            <section className=\"form-item\">\r\n                <label className=\"label\">Date Purchased</label>\r\n                <Controller\r\n                    as={DatePicker}\r\n                    control={control}\r\n                    valueName=\"selected\"\r\n                    selected={selectedDate}\r\n                    onChange={([selected]) => {\r\n                        setselectedDate(selected);\r\n                        return selected;\r\n                    }}\r\n                    dateFormat=\"dd/MM/yyyy\"\r\n                    placeholderText=\"Select Date\"\r\n                    name=\"purchaseDate\"\r\n                    rules={{ required: true }}\r\n                    defaultValue={null}\r\n                    maxDate={new Date()}\r\n                />\r\n                {errors.purchaseDate && <span className=\"err\">This field is required</span>}\r\n            </section>\r\n\r\n            <div className=\"form-item\">\r\n                <label className=\"label\">Stop-loss/Downside (Optional)</label>\r\n                <input name=\"slp\" type=\"text\" ref={register} placeholder=\"Eg. 5\" defaultValue={0}/>\r\n            </div>\r\n\r\n            <div className=\"form-item\">\r\n                <label className=\"hide label\">&nbsp;</label>\r\n                <button type=\"submit\" >Add Stock</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default StockField;","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Stock Ticker' },\r\n  { id: 'quantity', numeric: true, disablePadding: false, label: 'Quantity' },\r\n  { id: 'date', numeric: false, disablePadding: false, label: 'Date Purchased' },\r\n  { id: 'slp', numeric: true, disablePadding: false, label: 'Stop-loss price/Downside price' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.id === 'name' ? 'left' : 'center'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const numSelected = props.numSelected;\r\n\r\n  return (\r\n      numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\" onClick={() => {\r\n            props.deleteStock()\r\n            props.setSelected([])\r\n        }}>\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon/>\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : null \r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  paper: {\r\n    width: '90%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable(props) {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = useState('asc');\r\n  const [orderBy, setOrderBy] = useState('quantity');\r\n  const [selected, setSelected] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = props.rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.rows.length - page * rowsPerPage);\r\n\r\n  const deleteStock = () => {\r\n      props.deleteStock(selected)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size='small'\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={props.rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(props.rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell align=\"left\" component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">{row.quantity}</TableCell>\r\n                      <TableCell align=\"center\">{row.purchaseDate}</TableCell>\r\n                      <TableCell align=\"center\">{row.slp}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 33 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5]}\r\n          component=\"div\"\r\n          count={props.rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <EnhancedTableToolbar numSelected={selected.length} selected={selected} deleteStock={deleteStock} setSelected={setSelected}/>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport StockField from './StockField.jsx';\r\nimport PortfolioStock from './PortfolioStock.jsx'\r\nimport axios from 'axios';\r\n\r\nfunction Portfolio(props) {\r\n    const [portfolio, setPortfolio] = useState(props.portfolio);\r\n    const [rows, setRows] = useState(props.rows)\r\n\r\n    const submitPortFolioHelper = () => {\r\n        var data = JSON.stringify({\r\n            \"userId\": props.user.uid,\r\n            \"userEmail\" : props.user.email,\r\n            \"portfolio\" : portfolio,\r\n        });\r\n        var config = {\r\n            method: 'post',\r\n            url: 'https://maelstrom.pythonanywhere.com/portfolio/upload',\r\n            headers: { \r\n                'Content-Type': 'application/json'\r\n        },\r\n            data : data\r\n        };\r\n        axios(config)\r\n        .then(function (response) {\r\n            JSON.stringify(response.data.response);\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    const createData = (name, quantity, purchaseDate, slp) => {\r\n        return { name, quantity, purchaseDate, slp};\r\n    }\r\n\r\n    const submitPortFolio = (newPortfolio) => {\r\n        if (newPortfolio) {\r\n            let newRows = [...rows]\r\n            let item = newPortfolio[newPortfolio.length - 1]\r\n            item && newRows.push(createData(item.ticker, item.quantity, item.purchaseDate, item.slp));\r\n            setRows(newRows);\r\n            props.setRows(newRows);\r\n            props.setPortfolio(newPortfolio);\r\n            if(props.user) {\r\n                submitPortFolioHelper(newPortfolio);\r\n            }\r\n        }\r\n    }\r\n\r\n    const deleteStock = (selected) => {\r\n        if (selected && selected.length > 0) {\r\n            let newRows = []\r\n            let newPortfolio = []\r\n            rows.forEach((item) => {\r\n                if (selected.indexOf(item.name) < 0) {\r\n                    newRows.push(createData(item.name, item.quantity, item.purchaseDate, item.slp))\r\n                }\r\n            })\r\n            props.portfolio.forEach((item) => {\r\n                if (selected.indexOf(item.ticker) < 0) {\r\n                    newPortfolio.push(item)\r\n                }\r\n            })\r\n            setRows(newRows);\r\n            props.setRows(newRows);\r\n            setPortfolio(newPortfolio);\r\n            props.setPortfolio(newPortfolio);\r\n            if(props.user) {\r\n                submitPortFolioHelper(newPortfolio);\r\n            }\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"portfolio-container\">\r\n            <h1>Your Portfolio</h1>\r\n            {\r\n                (portfolio.length >= 1) ? \r\n                <PortfolioStock rows={rows} deleteStock={deleteStock}/> \r\n                : \r\n                <div className=\"main-folio\"> <h2>Your portfolio is empty <span role=\"img\" aria-label=\"cry\">😭</span></h2> </div>\r\n            }\r\n\r\n            <div className=\"add-new\">\r\n                <h2>Add additional stocks</h2>\r\n                <StockField portfolio={portfolio} setPortfolio={setPortfolio} submitPortfolio={submitPortFolio}/>\r\n                <div className=\"buffer\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Portfolio;","import React, { useState } from 'react';\r\nimport Authentication from './Authentication.jsx';\r\nimport Chatbot from './Chatbot.jsx';\r\nimport Portfolio from './Portfolio.jsx';\r\nimport fizz from './images/fizzlogo.png';\r\n\r\nfunction Home() {\r\n    const [isLogged, setIsLogged] = useState(false);\r\n    const [isUpload, setIsUpload] = useState(false);\r\n    const [isStonks, setStonks] = useState(true);\r\n\r\n    const [user, setUser] = useState(null);\r\n    const [portfolio, setPortfolio] = useState([]);\r\n    const [rows, setRows] = useState([]);\r\n\r\n    const [messageBoard, setMessageBoard] = useState([\r\n        ['bot', 'Hey there! I’m Fizz, your personal financial consultant!'], \r\n        ['bot', 'I can help you with some of the following: analyzing your current portfolio, providing you with suggestions about the stocks you may want to transact, and even recommending potential assets to invest in!'],\r\n        ['bot', 'For example, get started by asking me \"What is AMZN??!\"'],\r\n    ]);\r\n\r\n    const [navClass, setNavClass] = useState(\"burger-container\")\r\n    const [navWrapperClass, setNavWrapperClass] = useState(\"nav-wrapper\")\r\n\r\n    const handlePortfolio = () => {\r\n        setIsUpload(true);\r\n        setStonks(false);\r\n    }\r\n\r\n    const handleFizz = () => {\r\n        setIsUpload(false);\r\n        setStonks(true);\r\n    }\r\n    \r\n    const open = () => {\r\n        navClass === \"burger-container\" ? setNavClass(\"change\") : setNavClass(\"burger-container\")\r\n        navWrapperClass === \"nav-wrapper\" ? setNavWrapperClass(\"open-wrapper-class\") : setNavWrapperClass(\"nav-wrapper\")\r\n    }\r\n\r\n    const handleOpenFizz = () => {\r\n        handleFizz();\r\n        open();\r\n    }\r\n\r\n    const handleOpenPortfolio = () => {\r\n        handlePortfolio();\r\n        open();\r\n    }\r\n\r\n    return(\r\n        <div className=\"home\">\r\n            {!isLogged ?\r\n                <Authentication setIsLogged={setIsLogged} setUser={setUser}/> :\r\n                <div>\r\n                    <div className=\"navbar\">\r\n                        <img src={fizz} className=\"logo-image\" alt=\"fizzLogo\"></img>\r\n                        <div className=\"nav-wrapper\">\r\n                            <div className=\"nav-link\" onClick={handleFizz}>Fizz</div>\r\n                            <div className=\"nav-link\" onClick={handlePortfolio}>Portfolio</div>\r\n                            <a className=\"nav-link\" href=\"https://docs.google.com/document/d/1aeIvsM8bKKWKqaCXBCv7tIAwjWvPFJ6s40DcxDTlx7Q/\" target=\"_blank\" rel=\"noopener noreferrer\">Docs</a>\r\n                            <div className=\"nav-link\" onClick={() => console.log(4)}>About Us</div>\r\n                        </div>\r\n                        <div className=\"sign-out-nav\"><Authentication setIsLogged={setIsLogged} setUser={setUser}/></div>\r\n                        <div className={navClass} onClick={open}>\r\n                            <div className=\"bar1\"></div>\r\n                            <div className=\"bar2\"></div>\r\n                            <div className=\"bar3\"></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={navWrapperClass}>\r\n                            <div className=\"open-nav-link\" onClick={handleOpenFizz}>Fizz</div>\r\n                            <div className=\"open-nav-link\" onClick={handleOpenPortfolio}>Portfolio</div>\r\n                            <a className=\"open-nav-link\" href=\"https://docs.google.com/document/d/1aeIvsM8bKKWKqaCXBCv7tIAwjWvPFJ6s40DcxDTlx7Q/\" target=\"_blank\" rel=\"noopener noreferrer\" onClick={open}>Docs</a>\r\n                            <div className=\"open-nav-link\" onClick={() => console.log(4)}>About Us</div>\r\n                    </div>\r\n                    {isUpload && <Portfolio user={user} portfolio={portfolio} setPortfolio={setPortfolio} rows={rows} setRows={setRows}/>}\r\n                    {isStonks && <Chatbot user={user} messageBoard={messageBoard} setMessageBoard={setMessageBoard}/>}\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport Home from './components/Home.jsx';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/fizzlogo.4b93b019.png\";"],"sourceRoot":""}